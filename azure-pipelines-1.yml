# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    exclude:
      - azure-pipelines.yml
      - pom.xml

pool:
  vmImage: 'windows-latest'
  
variables:
  - group: Build-Variable-Group
  - name: MAVEN_CACHE_FOLDER
    value: $(Pipeline.Workspace)/.m2/repository
  - name: MAVEN_OPTS
    value: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

steps:
  - task: CacheBeta@0
    inputs:
      key: $(Build.SourcesDirectory)/pom.xml
      path: $(MAVEN_CACHE_FOLDER)
    displayName: Cache Maven local repo

  - task: DownloadSecureFile@1
    name: settings1xml
    inputs:
      secureFile: 'settings1.xml'

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
         mkdir -p ~/.m2
          cp "$(settings1xml.secureFilePath)" ~/.m2/settings1.xml          


  
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      mavenAuthenticateFeed: true
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      mavenVersionOption: 'Default'
      effectivePomSkip: true
      sonarQubeRunAnalysis: false
      goals: 'clean install package deploy $(MAVEN_OPTS) -DmuleDeploy -Dserver=$(server) 
      -Denvironment=$(environment) -Dworkers=$(workers) -DworkerType=$(workerType) 
      -DmuleVersion=$(muleVersion) -Dusername=$(username) -Dpassword=$(password)'